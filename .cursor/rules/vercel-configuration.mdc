---
globs: vercel.json,src/frontend/vercel.json,src/frontend/next.config.ts
description: Vercel deployment configuration and optimization
---

# Vercel Configuration Guide

## Configuration Files

### Main Vercel Config
[src/frontend/vercel.json](mdc:src/frontend/vercel.json) - Primary deployment configuration

### Next.js Config
[src/frontend/next.config.ts](mdc:src/frontend/next.config.ts) - Next.js optimization settings

## Vercel.json Structure

### Builds Configuration
```json
{
  "version": 2,
  "framework": "nextjs",
  "builds": [
    {
      "src": "package.json",
      "use": "@vercel/next"
    },
    {
      "src": "api/python.py",
      "use": "@vercel/python"
    }
  ]
}
```

### Routes Configuration
```json
"routes": [
  {
    "src": "/api/python/(.*)",
    "dest": "api/python.py"
  },
  {
    "src": "/(.*)",
    "dest": "$1"
  }
]
```

## Python Serverless Function

### Location
[src/frontend/api/python.py](mdc:src/frontend/api/python.py) - Ultra-minimal Python function

### Dependencies
[src/frontend/api/requirements.txt](mdc:src/frontend/api/requirements.txt) - Minimal dependencies:
- `requests` - HTTP client
- `python-dotenv` - Environment variables
- `mangum` - ASGI handler

### Size Optimization
- **Before**: 50+ packages (supabase, langchain, google-generativeai)
- **After**: 8 packages (ultra-minimal)
- **Result**: Well under 250MB Vercel limit

## Bundle Size Optimization

### Next.js Config
```typescript
experimental: {
  outputFileTracingExcludes: {
    'api/python.py': [
      '**/node_modules/**',
      '**/.next/**',
      '**/src/backend/tests/**',
      '**/data/**',
      '**/scripts/**',
      '**/make/**',
      '**/*.md',
      '**/requirements.txt',
      '**/setup.py',
      '**/src/thinkubator_rag.egg-info/**'
    ]
  }
}
```

### Excluded Directories
- `data/` - Large PDF and processed files
- `src/backend/tests/` - Test files
- `scripts/` - Build scripts
- `make/` - Makefile scripts
- Documentation files

## Environment Variables

### Required Variables
Set in Vercel dashboard:
- `GEMINI_API_KEY` - Google AI API key
- `SUPABASE_URL` - Supabase project URL
- `SUPABASE_ANON_KEY` - Supabase anonymous key
- `VERCEL_URL` - Automatically set by Vercel

### Environment Detection
```typescript
const isVercel = process.env.VERCEL_URL || process.env.NODE_ENV === 'production'
```

## Deployment Best Practices

### Function Size Limits
- **Maximum**: 250MB uncompressed
- **Target**: Under 200MB for safety margin
- **Strategy**: Use direct HTTP calls instead of heavy SDKs

### Performance Optimization
- Use absolute URLs for API calls
- Implement proper error handling
- Cache static assets via CDN
- Optimize bundle size with tree shaking

### Troubleshooting

#### Common Issues
1. **250MB Limit**: Reduce dependencies, use direct API calls
2. **ECONNREFUSED**: Fix environment detection and URL construction
3. **Build Failures**: Check Next.js config syntax
4. **Function Timeout**: Optimize code, increase timeout if needed

#### Debug Steps
1. Check Vercel build logs
2. Verify environment variables
3. Test API endpoints manually
4. Monitor function execution time

## Repository Size Management

### .gitignore Configuration
[.gitignore](mdc:.gitignore) excludes:
- `node_modules/` - Frontend dependencies
- `data/pdfs/` - Large PDF files
- `data/processed/` - Processed data files
- Build artifacts and caches

### Git History Cleanup
```bash
git rm --cached -r large_directory/
git commit -m "Remove large files from tracking"
```

## Monitoring and Analytics

### Vercel Dashboard
- Monitor function execution
- Check build logs
- View performance metrics
- Track error rates

### Logging
- Use `console.log()` for debugging
- Implement proper error handling
- Monitor API response times